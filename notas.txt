#--------- comandos de uso frencuente
#Para hacer alias de comandos largos
bash
.#Listar namespace"ns"
kubectl get ns
.# listar pod de ns
kubectl get pods -n <ns>
.#Describir pods o ver lo que tiene dentro
k describe pod < namepod > -n <ns>
.#Listar todos con detalles
kubectl get pods -A < namepod > < ns >
.#Reiniciar pod
kubectl rollout restart deployment < namepod "el nombre no debe incluir los numeros finales" > -n ns
Ejemplo: kubectl rollout restart deployment mono -n wabims-pre
#Ingresar a un pod
 kubectl exec -it mono-65f79744d4-r8lhh -n wabims -- sh
//verificar
####
*****Kubernetes ******
#Listar Clusters
kubectl config get-contexts
#Entrar al cluster
kubectl config use-context cgsp1weuakswebcgscomm001-admin
#Listar todos los pods y ns
kubectl get pods -A
#Contar lineas
kubectl get pods -A | wc -l
#Listar nodos
kubectl get node
#describe nodes
kubectl describe node <nombre del contexto>
#Estado de los componentes del cluster
kubectl get componentstatuses

···················································


#------- varios comandos --------
Info General
Instalar docker
	 kubectl
	 Minikube -> "Trabajar local"
sudo usermod -a -G docker <usuario> -> agregar usuario al equipo de docker
apt install terminator tmux wget -> instalar herramientas de ayuda


conexion ssh
ssh srv@192.168.1.139
**Cifrar Base64**
echo -n "postgres" | base64
echo "postgres" | base64 -d


##Docker##
system status docker ->ver estado
docker ps -> ver contenedores activos
docker ps -a  -> todos los estados de los contenedores viejos y nuevos
docker create helloworld:latest -> crear contenedor
docker start <idcontenedor>
       stop  <idcontenedor>

##Minikube##
minikube dashboard --url -> habilitar dashboard

##K8##
kubectl run <name> --image="imagedocker" --port:80 80
kubectl expose pod kbilling --type=LoadBalancer --port=8080 --target-port=80  --> Exponer servicio
kubectl api-versions ->version de la api
kubectl apply -f ./ -> ejecutar los deployment 
kubectl apply -f archivo.yml -> ejecutar los deployment individuales
kubectl delete -f ./ -> elimina lo que esta creado en k8 no los archivos
kubectl get all -> ver todo
minikube ip -> ver ip de cluster
docker build -t <imagendockerhub> --no-cache --buld-arg JAR_FILE=./*.jar .  -> generar imagen java en ruta especifica
docker build -t helloworld:1.0 .     -> lo mismo que el anterior pero con etiqueta
docker tag helloworld:1.0 helloworld:latest -> re-etiquetar
docker tag helloworld:2.0 helloworld:latest -> re-etiquetar para organizar
docker inspect <idcontenedor> -> ver el dockerfile del contenedor


